# 根目录 pyproject.toml
# 主要用于配置 pre-commit 和其他全局 Python 工具

[project]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.description }}"
authors = [
    {name = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.author_email }}"}
]
readme = "README.md"
license = {text = "{{ cookiecutter.license }}"}
requires-python = ">={{ cookiecutter.python_version }}"

[tool.ruff]
# Ruff 配置 - Python 代码检查和格式化工具
target-version = "py311"
line-length = 100

[tool.ruff.lint]
# 启用的规则集
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "I",     # isort
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "UP",    # pyupgrade
    "ARG",   # flake8-unused-arguments
    "SIM",   # flake8-simplify
    "TCH",   # flake8-type-checking
]
# 忽略的规则
ignore = [
    "E501",  # 行长度由 formatter 处理
    "B008",  # 不要在函数调用中使用默认参数（FastAPI 依赖注入需要）
    "B904",  # 在 except 中使用 raise from
]

[tool.ruff.lint.per-file-ignores]
# 每个文件的特殊规则
"__init__.py" = ["F401"]  # 允许未使用的导入
"tests/**/*.py" = ["ARG"]  # 测试文件允许未使用的参数

[tool.ruff.lint.isort]
# Import 排序配置
known-third-party = ["fastapi", "pydantic", "sqlmodel", "alembic"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.format]
# 格式化配置
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
# Pytest 配置
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: 标记慢速测试",
    "integration: 标记集成测试",
    "unit: 标记单元测试",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

