name: CI & Lint

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["{{ cookiecutter.python_version }}", "3.10", "3.9"]

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      run: curl -LsSf https://astral.sh/uv/install.sh | sh

    - name: Cache uv dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Generate lock file and Install dependencies
      run: |
        uv pip compile pyproject.toml --extra dev -o requirements.lock
        uv pip sync requirements.lock

    - name: Lint with Ruff
      run: uv run ruff check . && uv run ruff format . --check
    
    - name: Test with pytest
      run: uv run pytest
