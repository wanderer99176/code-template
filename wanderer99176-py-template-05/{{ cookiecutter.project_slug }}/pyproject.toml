# ==============================================================================
# Build system configuration
# ==============================================================================
[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"


# ==============================================================================
# Project metadata (PEP 621)
# ==============================================================================
[project]
name = "{{ cookiecutter.project_name }}"
version = "{{ cookiecutter.first_version }}"
description = "{{ cookiecutter.project_short_description }}"
readme = "README.md"
authors = [
    { name = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.author_email }}" },
]
license = { text = "{{ cookiecutter.license }}" }
requires-python = ">={{ cookiecutter.python_version }}"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License", # Adjust if you chose a different license
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

# --- Production Dependencies ---
dependencies = [
    # Examples for a web application. Adjust as needed.
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.20.0",
    "pydantic>=2.0.0",
    "sqlalchemy>=2.0.0",
    "loguru>=0.7.0",
]

[project.urls]
Homepage = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}"
Repository = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}"
"Bug Tracker" = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}/issues"

# --- Optional Dependencies (for development, testing, etc.) ---
[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov",      # For test coverage
    "httpx",           # For testing FastAPI endpoints
    "ruff",            # Linter and formatter
    "pre-commit",      # Git hooks manager
    "build",           # For building the package
    "twine",           # For publishing to PyPI
    "sphinx",          # For documentation
    "pydantic-settings", # For config management
]

# --- Command-line entry points ---
[project.scripts]
run-app = "{{ cookiecutter.package_name }}.__main__:main"


# ==============================================================================
# Tool Configurations
# ==============================================================================

# --- Setuptools configuration (for src-layout) ---
[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

# --- Ruff Linter and Formatter configuration ---
[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py{{ cookiecutter.python_version.replace('.', '') }}" # e.g., "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "A",  # flake8-builtins
    "T20",# flake8-print
]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# --- Pytest configuration ---
[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests/unit",
    "tests/integration",
]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = [
    "-ra",
    "-q",
    "--cov={{ cookiecutter.package_name }}",
    "--cov-report=term-missing",
    "--cov-fail-under=80", # Enforce 80% test coverage
]

# --- Coverage.py configuration ---
[tool.coverage.run]
source = ["{{ cookiecutter.package_name }}"]
omit = [
    "*/__main__.py", # Often not testable
]

[tool.coverage.report]
show_missing = true